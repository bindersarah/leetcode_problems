class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        # define
        m = len(text1)
        n = len(text2)

        # initialize a matrix c
        c = [[0] * (n + 1) for _ in range(m + 1)]

        for i in range(1, m+1): # + 1 so that the first row/col are zeros.. for ex. below when i = 0 i-1 goes out of bounds
            for j in range(1, n+1): # +1 handles base case
        
                # gen case
                if text1[i-1] == text2[j-1]: 
                    c[i][j] = c[i-1][j-1] + 1 # if match, prev diagonal position + 1
                else:  # if no match, max of left or top position
                    c[i][j] = max(c[i-1][j], c[i][j-1])
        
        return c[m][n] # last position holds the answer
